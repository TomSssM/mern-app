{"version":3,"sources":["webpack://mern-app/./src/config/env.js","webpack://mern-app/./src/config/path.js","webpack://mern-app/external \"express\"","webpack://mern-app/external \"path\"","webpack://mern-app/webpack/bootstrap","webpack://mern-app/webpack/runtime/compat get default export","webpack://mern-app/webpack/runtime/define property getters","webpack://mern-app/webpack/runtime/hasOwnProperty shorthand","webpack://mern-app/webpack/runtime/make namespace object","webpack://mern-app/./src/server/index.js"],"names":["LOCAL_PORT","forcePort","process","env","PORT","Number","isNaN","ROOT_PATH","path","__dirname","BUILD_PATH","STATIC_PATH","app","express","use","get","req","res","redirect","sendFile","listen","console","log"],"mappings":";;;;;;;;;;;;;;;AAAO,MAAMA,UAAU,GAAG,IAAnB;AAEP,MAAMC,SAAS,GAAG,CAACC,OAAO,CAACC,GAAR,CAAYC,IAA/B;AAEO,MAAMA,IAAI,GAAGC,MAAM,CAACC,KAAP,CAAaL,SAAb,IAA0BD,UAA1B,GAAuCC,SAApD,C;;;;;;;;;;;;;;;;;;ACJP;AAEO,MAAMM,SAAS,GAAGC,mDAAA,CAAaC,SAAb,EAAwB,IAAxB,EAA8B,IAA9B,CAAlB;AAEA,MAAMC,UAAU,GAAGF,gDAAA,CAAU,OAAV,CAAnB;AAEA,MAAMG,WAAW,GAAGH,gDAAA,CAAUE,UAAV,EAAsB,QAAtB,CAApB,C;;;;;;;;;;ACNP,qC;;;;;;;;;;ACAA,kC;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AAEA,MAAME,GAAG,GAAGC,8CAAO,EAAnB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,mDAAA,EAAR;AAEAD,GAAG,CAACG,GAAJ,CAAQ,aAAR,EAAuB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnCA,KAAG,CAACC,QAAJ,CAAa,GAAb;AACD,CAFD;AAIAN,GAAG,CAACE,GAAJ,CAAQD,qDAAA,CAAeF,gDAAf,CAAR;AAEAC,GAAG,CAACG,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzBA,KAAG,CAACE,QAAJ,CAAaX,mDAAA,CAAaG,gDAAb,EAA0B,YAA1B,CAAb;AACD,CAFD,E,CAIA;;AAEAC,GAAG,CAACQ,MAAJ,CAAWhB,yCAAX,EAAiB,MAAM;AACrBiB,SAAO,CAACC,GAAR,CAAa,uBAAsBlB,yCAAK,KAAxC;AACD,CAFD,E","file":"server.js","sourcesContent":["export const LOCAL_PORT = 8080;\n\nconst forcePort = +process.env.PORT;\n\nexport const PORT = Number.isNaN(forcePort) ? LOCAL_PORT : forcePort;\n","import path from 'path';\n\nexport const ROOT_PATH = path.resolve(__dirname, '..', '..');\n\nexport const BUILD_PATH = path.join('build');\n\nexport const STATIC_PATH = path.join(BUILD_PATH, 'static');\n","module.exports = require(\"express\");;","module.exports = require(\"path\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import path from 'path';\nimport express from 'express';\nimport { PORT, STATIC_PATH } from '../config';\n\nconst app = express();\n\napp.use(express.json());\n\napp.get('/index.html', (req, res) => {\n  res.redirect('/');\n});\n\napp.use(express.static(STATIC_PATH));\n\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve(STATIC_PATH, 'index.html'));\n});\n\n// todo: error handling\n\napp.listen(PORT, () => {\n  console.log(`server listening on ${PORT}...`);\n});\n"],"sourceRoot":""}